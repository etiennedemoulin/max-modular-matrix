{"version":3,"names":["Server","loadConfig","pluginFilesystem","fs","path","JSON5","matrixSchema","config","process","env","ENV","import","meta","url","console","log","app","name","pid","server","useDefaultApplicationTemplate","stateManager","registerSchema","pluginManager","register","dirname","join","cwd","start","filesystem","get","schema","create","filename","getTree","children","forEach","file","matrix","parse","readFileSync","toString","set","structure","onUpdate","updates","send","JSON","stringify"],"sources":["../../src/server/index.js"],"sourcesContent":["import '@soundworks/helpers/polyfills.js';\nimport { Server } from '@soundworks/core/server.js';\n\nimport { loadConfig } from '../utils/load-config.js';\nimport '../utils/catch-unhandled-errors.js';\n\nimport pluginFilesystem from '@soundworks/plugin-filesystem/server.js';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport JSON5 from 'json5';\n\nimport matrixSchema from './schemas/matrix.js';\n\n\n// - General documentation: https://soundworks.dev/\n// - API documentation:     https://soundworks.dev/api\n// - Issue Tracker:         https://github.com/collective-soundworks/soundworks/issues\n// - Wizard & Tools:        `npx soundworks`\n\nconst config = loadConfig(process.env.ENV, import.meta.url);\n\nconsole.log(`\n--------------------------------------------------------\n- launching \"${config.app.name}\" in \"${process.env.ENV || 'default'}\" environment\n- [pid: ${process.pid}]\n--------------------------------------------------------\n`);\n\n/**\n * Create the soundworks server\n */\nconst server = new Server(config);\n// configure the server for usage within this application template\nserver.useDefaultApplicationTemplate();\n\nserver.stateManager.registerSchema('matrix', matrixSchema);\n\nserver.pluginManager.register('filesystem', pluginFilesystem, {\n  dirname: path.join(process.cwd(), '../help'),\n});\n\n\n/**\n * Launch application (init plugins, http server, etc.)\n */\nawait server.start();\n\nconst filesystem = await server.pluginManager.get('filesystem');\nconst schema = await server.stateManager.create('matrix');\n\n// const filepath = filesystem.findInTree('2x2.json');\n// console.log(filesystem.getTree());\nconst filename = 'matrix.json';\nfilesystem.getTree().children.forEach(file => {\n  if (file.name === filename) {\n    const matrix = JSON5.parse(fs.readFileSync(file.path).toString());\n    schema.set({structure:matrix});\n  }\n})\n\nschema.onUpdate(updates => {\n  process.send(JSON.stringify(updates));\n  // console.log(updates);\n});\n"],"mappings":"AAAA,OAAO,kCAAkC;AACzC,SAASA,MAAM,QAAQ,4BAA4B;AAEnD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAO,oCAAoC;AAE3C,OAAOC,gBAAgB,MAAM,yCAAyC;AAEtE,OAAOC,EAAE,MAAM,UAAU;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY,MAAM,qBAAqB;;AAG9C;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGN,UAAU,CAACO,OAAO,CAACC,GAAG,CAACC,GAAG,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;AAE3DC,OAAO,CAACC,GAAG,CAAE;AACb;AACA,eAAeR,MAAM,CAACS,GAAG,CAACC,IAAK,SAAQT,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI,SAAU;AACpE,UAAUF,OAAO,CAACU,GAAI;AACtB;AACA,CAAC,CAAC;;AAEF;AACA;AACA;AACA,MAAMC,MAAM,GAAG,IAAInB,MAAM,CAACO,MAAM,CAAC;AACjC;AACAY,MAAM,CAACC,6BAA6B,CAAC,CAAC;AAEtCD,MAAM,CAACE,YAAY,CAACC,cAAc,CAAC,QAAQ,EAAEhB,YAAY,CAAC;AAE1Da,MAAM,CAACI,aAAa,CAACC,QAAQ,CAAC,YAAY,EAAEtB,gBAAgB,EAAE;EAC5DuB,OAAO,EAAErB,IAAI,CAACsB,IAAI,CAAClB,OAAO,CAACmB,GAAG,CAAC,CAAC,EAAE,SAAS;AAC7C,CAAC,CAAC;;AAGF;AACA;AACA;AACA,MAAMR,MAAM,CAACS,KAAK,CAAC,CAAC;AAEpB,MAAMC,UAAU,GAAG,MAAMV,MAAM,CAACI,aAAa,CAACO,GAAG,CAAC,YAAY,CAAC;AAC/D,MAAMC,MAAM,GAAG,MAAMZ,MAAM,CAACE,YAAY,CAACW,MAAM,CAAC,QAAQ,CAAC;;AAEzD;AACA;AACA,MAAMC,QAAQ,GAAG,aAAa;AAC9BJ,UAAU,CAACK,OAAO,CAAC,CAAC,CAACC,QAAQ,CAACC,OAAO,CAACC,IAAI,IAAI;EAC5C,IAAIA,IAAI,CAACpB,IAAI,KAAKgB,QAAQ,EAAE;IAC1B,MAAMK,MAAM,GAAGjC,KAAK,CAACkC,KAAK,CAACpC,EAAE,CAACqC,YAAY,CAACH,IAAI,CAACjC,IAAI,CAAC,CAACqC,QAAQ,CAAC,CAAC,CAAC;IACjEV,MAAM,CAACW,GAAG,CAAC;MAACC,SAAS,EAACL;IAAM,CAAC,CAAC;EAChC;AACF,CAAC,CAAC;AAEFP,MAAM,CAACa,QAAQ,CAACC,OAAO,IAAI;EACzBrC,OAAO,CAACsC,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EACrC;AACF,CAAC,CAAC"}
